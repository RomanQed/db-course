import java.text.SimpleDateFormat

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    compileJava.options.encoding('UTF-8')
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs.add('-parameters')
}

configurations {
    agent {
        canBeResolved = true
        canBeConsumed = true
    }
}

group = 'com.github.romanqed.course'
archivesBaseName = 'server'
version = '0.0.1'

def allureVersion = '2.26.0'
def aspectJVersion = '1.9.22'

repositories {
    mavenCentral()
}

dependencies {
    // Tests
    agent "org.aspectj:aspectjweaver:$aspectJVersion"
    testImplementation platform("org.junit:junit-bom:5.10.2")
    testImplementation platform("io.qameta.allure:allure-bom:$allureVersion")
    testImplementation "io.qameta.allure:allure-junit5"
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.0'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.10.0'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.14.2'
    // Tracing
    implementation group: 'io.opentelemetry', name: 'opentelemetry-api', version: '1.46.0'
    implementation group: 'io.opentelemetry', name: 'opentelemetry-sdk', version: '1.46.0'
    implementation group: 'io.opentelemetry', name: 'opentelemetry-exporter-otlp', version: '1.46.0'
    // Jeflect
    implementation group: 'com.github.romanqed', name: 'jeflect', version: '1.1.4L'
    // Annotation processor
    implementation group: 'org.atteo.classindex', name: 'classindex', version: '3.13'
    annotationProcessor group: 'org.atteo.classindex', name: 'classindex', version: '3.13'
    // Logger API
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.13'
    // Logger impl
    implementation group: 'org.slf4j', name: 'slf4j-reload4j', version: '2.0.13'
    // Javalin
    implementation group: 'io.javalin', name: 'javalin', version: '6.1.4'
    // Postgresql driver
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.3'
    // DI
    implementation group: 'io.github.amayaframework', name: 'amaya-di', version: '2.2.0'
    // Gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
    // JWT implementation
    implementation group: 'com.github.kmehrunes', name: 'javalin-jwt', version: '0.7.0'
    // Email libs
    implementation group: 'jakarta.mail', name: 'jakarta.mail-api', version: '2.1.3'
    implementation group: 'org.eclipse.angus', name: 'jakarta.mail', version: '2.0.0'
}

test {
    useJUnitPlatform()
    jvmArgs = [ "-javaagent:${configurations.agent.singleFile}" ]
}

shadowJar {
    manifest {
        var date = new Date()
        var javaVersion = System.getProperty("java.version")
        var vmVendor = System.getProperty("java.vm.vendor")
        var vmVersion = System.getProperty("java.vm.version")

        attributes(
                'Main-Class': 'com.github.romanqed.course.Main',
                'Created-By': String.format("%s (%s %s)", javaVersion, vmVendor, vmVersion),
                'Gradle-Version': "Gradle $gradle.gradleVersion",
                'Build-Date': new SimpleDateFormat("yyyy-MM-dd").format(date),
                'Build-Time': new SimpleDateFormat("HH:mm:ss.SSSZ").format(date),
                'Built-By': 'Bakaldin Roman',
                'Bundle-Name': 'DB Course',
                'Bundle-Version': archiveVersion,
                'Bundle-SymbolicName': archivesBaseName,
                'Implementation-Title': archivesBaseName,
                'Implementation-Vendor': 'github.com/romanqed',
                'Implementation-Version': archiveVersion,
                'Specification-Title': archivesBaseName,
                'Specification-Vendor': 'github.com/romanqed',
                'Specification-Version': archiveVersion
        )
    }
    archiveBaseName.set(archivesBaseName)
    archiveClassifier.set('')
    archiveVersion.set('')
    mergeServiceFiles('META-INF/annotations')
}
